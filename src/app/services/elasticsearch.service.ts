import { Injectable } from '@angular/core';
import { Http, URLSearchParams, Response } from '@angular/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';

@Injectable()
export class ElasticsearchService {

  constructor(
    private http: Http
  ) { }

  search(query: string) {
    var params = new URLSearchParams();
    params.set('q', query);
    return this.http
      .post('http://52.33.130.55/graph/_search', {
        "_source": ['title', 'family', 'nodes', 'edges', 'clusters', 'cycles'],
        "query": {
          "simple_query_string" : {
              "query": query,
              "analyze_wildcard": "true"
          }
        },
        "highlight" : {
          "fields" : {
            "dot" : {
              "fragment_size" : 120, 
              "number_of_fragments" : 1  
            }
          },
          "require_field_match" : false
        }
      })
      .map(this.extractData)
      // .catch(this.handleError);
  }

  private extractData(res: Response) {
    let body = res.json();
    return body.hits || { };
  }

  // private handleError (error: Response | any) {
  //   let errMsg: string;
  //   if (error instanceof Response) {
  //     const body = error.json() || '';
  //     const err = body.error || JSON.stringify(body);
  //     errMsg = `${error.status} - ${error.statusText || ''} ${err}`;
  //   } else {
  //     errMsg = error.message ? error.message : error.toString();
  //   }
  //   console.error(errMsg);
  //   return Observable.throw(new Error(errMsg));
  // }

}
